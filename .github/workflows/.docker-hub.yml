name: Build & Push

on:
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - '**.md'
  push:
    paths-ignore:
      - 'LICENSE'
      - '**.md'
  schedule:
    - cron: 0 0 * * 3

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

env:
  DOCKER_HUB_USERNAME: kumaxim

jobs:
  fetch-versions:
    name: Fetch versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Fetch WP-CLI versions
        run: ./update.sh cli
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Retrieve WP-CLI versions from https://github.com/wp-cli/wp-cli.git'
      - run: |
          status="$(git status --short)"
          [ -z "$status" ]

  generate-jobs:
    needs: fetch-versions
    name: Generate Jobs
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.generate-jobs.outputs.strategy }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - id: generate-jobs
        name: Generate Jobs
        run: |
          mkdir -p ~/.config/bashbrew
          echo -e "Namespace: ${{ env.DOCKER_HUB_USERNAME }}" > ~/.config/bashbrew/flags
          git clone --depth 1 https://github.com/docker-library/bashbrew.git -b master ~/bashbrew
          strategy="$(~/bashbrew/scripts/github-actions/generate.sh)"
          jq . <<<"$strategy" # sanity check / debugging aid
          echo "::set-output name=strategy::$strategy"

  test:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy) }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Prepare Environment
        run: ${{ matrix.runs.prepare }}
      - uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Pull Dependencies
        run: ${{ matrix.runs.pull }}
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}
      - name: History ${{ matrix.name }}
        run: ${{ matrix.runs.history }}
      - name: Test ${{ matrix.name }}
        run: ${{ matrix.runs.test }}
      - name: '"docker images"'
        run: ${{ matrix.runs.images }}
      - name: Push ${{ matrix.name }}
        run: docker push --all-tags ${{ env.DOCKER_HUB_USERNAME }}/wpcli-keep-running
